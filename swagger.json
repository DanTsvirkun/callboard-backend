{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Callboard API docs",
    "description": "API documentation for GoIT project 'Callboard'. [Backend github repository](https://github.com/DanTsvirkun/callboard-backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [{ "url": "https://slimmom-backend.herokuapp.com" }],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Call",
      "description": "Call endpoints"
    },
    {
      "name": "Product-search",
      "description": "Product-search endpoints"
    },
    {
      "name": "Day",
      "description": "Day endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get new pair of tokens",
        "parameters": [
          {
            "name": "Refresh token",
            "description": "'refreshToken' field you get after authentication",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body with session's id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokensRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid refresh token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication. WARNING: Works only for sign-in, after registered on front-end (if you're writing your back-end for a SPECIFIC front-end, then you can configure it right to work both for sign-up & sign-in)",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET /user",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/call": {
      "post": {
        "tags": ["Call"],
        "summary": "Post a call",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Call's object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          },
          "415": {
            "description": "File is not an image",
            "content": {}
          }
        }
      }
    },
    "/call/favourites/{callId}": {
      "post": {
        "tags": ["Call"],
        "summary": "Add call to favourites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "callId",
            "in": "path",
            "description": "Call's id ('id' field in call's object)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouritesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "Already in favourites",
            "content": {}
          },
          "404": {
            "description": "Call not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/daily-rate/{userId}": {
      "post": {
        "tags": ["Daily-rate"],
        "summary": "Post your characteristics to the website and get daily rate information",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Object with user's characteristics",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyRateWithUserIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": ["Product-search"],
        "summary": "Search and get a list of products by query",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Name of the product (in russian) you want to find",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid query name / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/day": {
      "post": {
        "tags": ["Day"],
        "summary": "Post an eaten product",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with date and eaten product's id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Habit not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Day"],
        "summary": "Delete eaten product",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with eaten product's id you want to delete",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Day not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/day/info": {
      "post": {
        "tags": ["Day"],
        "summary": "Get info for day",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with date of the day you want to get info for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation / No such day found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "registrationDate": {
            "type": "string",
            "description": "User's registration date (YYYY-MM-DD format)",
            "example": "2020-12-31"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session's refresh token (needed for /auth/refresh)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
          },
          "sid": {
            "type": "string",
            "description": "Session's id (needed for /auth/refresh)",
            "example": "507f1f77bcf86cd799439011"
          },
          "user": {
            "type": "object",
            "description": "User's data",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "favourites": {
                "type": "array",
                "description": "User's favourite calls",
                "items": {
                  "type": "object",
                  "description": "User's favourite call",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Call's title",
                      "example": "Red Shirt"
                    },
                    "imageUrls": {
                      "type": "array",
                      "description": "Call's image URLs",
                      "items": {
                        "type": "string",
                        "description": "Image URL"
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Call's description",
                      "example": "New red shirt, made from cotton"
                    },
                    "category": {
                      "type": "string",
                      "description": "Call's category",
                      "example": "Trade"
                    },
                    "price": {
                      "type": "integer",
                      "description": "Call's price",
                      "example": 0
                    },
                    "oldPrice": {
                      "oneOf": [{ "type": "string" }, { "type": "null" }],
                      "description": "Call's old price (if was changed and became lower)",
                      "example": null
                    },
                    "isOnSale": {
                      "type": "boolean",
                      "description": "Call's sale status",
                      "example": false
                    },
                    "discountPercents": {
                      "oneOf": [{ "type": "string" }, { "type": "null" }],
                      "description": "Call's discount percents (if on sale)",
                      "example": null
                    },
                    "phone": {
                      "type": "string",
                      "description": "Call author's phone",
                      "example": "+380000000000"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Call's id",
                      "example": "507f1f77bcf86cd799439012"
                    },
                    "__v": {
                      "type": "integer",
                      "description": "MongoDB' document's service versionKey (ignore)"
                    }
                  }
                }
              },
              "calls": {
                "type": "array",
                "description": "User's favourite calls",
                "items": {
                  "type": "object",
                  "description": "User's favourite call",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Call's title",
                      "example": "Tesla Model X"
                    },
                    "imageUrls": {
                      "type": "array",
                      "description": "Call's image URLs",
                      "items": {
                        "type": "string",
                        "description": "Image URL"
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Call's description",
                      "example": "New tesla"
                    },
                    "category": {
                      "type": "string",
                      "description": "Call's category",
                      "example": "Transport"
                    },
                    "price": {
                      "type": "number",
                      "description": "Call's price",
                      "example": 1500000
                    },
                    "oldPrice": {
                      "oneOf": [{ "type": "string" }, { "type": "null" }],
                      "description": "Call's old price (if was changed and became lower)",
                      "example": 1750000
                    },
                    "isOnSale": {
                      "type": "boolean",
                      "description": "Call's sale status",
                      "example": true
                    },
                    "discountPercents": {
                      "oneOf": [{ "type": "string" }, { "type": "null" }],
                      "description": "Call's discount percents (if on sale)",
                      "example": 14.28571428571429
                    },
                    "phone": {
                      "type": "string",
                      "description": "Call author's phone",
                      "example": "+380000000000"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Call's id",
                      "example": "507f1f77bcf86cd799439013"
                    },
                    "__v": {
                      "type": "integer",
                      "description": "MongoDB' document's service versionKey (ignore)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RefreshTokensRequest": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "description": "Session's id ('sid' field after authentication)",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "RefreshTokensResponse": {
        "type": "object",
        "properties": {
          "newAccessToken": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "newRefreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
          },
          "sid": {
            "type": "string",
            "description": "New session's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "CallRequest": {
        "type": "object",
        "description": "Call's object",
        "required": [
          "title",
          "description",
          "category",
          "price",
          "phone",
          "file"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Call's title",
            "example": "Red Shirt"
          },
          "description": {
            "type": "string",
            "description": "Call's description",
            "example": "New red shirt, made from cotton"
          },
          "category": {
            "type": "string",
            "description": "Call's category",
            "example": "Trade"
          },
          "price": {
            "type": "integer",
            "description": "Call's price",
            "example": 0
          },
          "phone": {
            "type": "string",
            "description": "Call author's phone",
            "example": "+380000000000"
          },
          "file": {
            "type": "string",
            "description": "Call's image (could be more than one, maximum 5)",
            "format": "binary"
          }
        }
      },
      "CallResponse": {
        "type": "object",
        "description": "Call's object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Call's title",
            "example": "Red Shirt"
          },
          "description": {
            "type": "string",
            "description": "Call's description",
            "example": "New red shirt, made from cotton"
          },
          "category": {
            "type": "string",
            "description": "Call's category",
            "example": "Trade"
          },
          "price": {
            "type": "integer",
            "description": "Call's price",
            "example": 0
          },
          "phone": {
            "type": "string",
            "description": "Call author's phone",
            "example": "+380000000000"
          },
          "imageUrls": {
            "type": "array",
            "description": "Call's image URLs",
            "items": {
              "type": "string",
              "description": "Image URL"
            }
          },
          "isOnSale": {
            "type": "boolean",
            "description": "Call's sale status",
            "example": false
          },
          "userId": {
            "type": "string",
            "description": "Call author's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "id": {
            "type": "string",
            "description": "Call's id",
            "example": "507f1f77bcf86cd799439012"
          }
        }
      },
      "FavouritesResponse": {
        "type": "object",
        "description": "User's favourite calls response",
        "properties": {
          "newFavourites": {
            "type": "array",
            "description": "User's favourite calls array",
            "items": {
              "type": "object",
              "description": "User's favourite call",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Call's title",
                  "example": "Tesla Model X"
                },
                "imageUrls": {
                  "type": "array",
                  "description": "Call's image URLs",
                  "items": {
                    "type": "string",
                    "description": "Image URL"
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Call's description",
                  "example": "New tesla"
                },
                "category": {
                  "type": "string",
                  "description": "Call's category",
                  "example": "Transport"
                },
                "price": {
                  "type": "number",
                  "description": "Call's price",
                  "example": 1500000
                },
                "oldPrice": {
                  "oneOf": [{ "type": "string" }, { "type": "null" }],
                  "description": "Call's old price (if was changed and became lower)",
                  "example": 1750000
                },
                "isOnSale": {
                  "type": "boolean",
                  "description": "Call's sale status",
                  "example": true
                },
                "discountPercents": {
                  "oneOf": [{ "type": "string" }, { "type": "null" }],
                  "description": "Call's discount percents (if on sale)",
                  "example": 14.28571428571429
                },
                "phone": {
                  "type": "string",
                  "description": "Call author's phone",
                  "example": "+380000000000"
                },
                "_id": {
                  "type": "string",
                  "description": "Call's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB' document's service versionKey (ignore)"
                }
              }
            }
          }
        }
      },
      "DailyRateRequest": {
        "required": ["weight", "height", "age", "desiredWeight", "bloodType"],
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "description": "User's weight (kg)",
            "minimum": 20,
            "maximum": 500,
            "example": 100
          },
          "height": {
            "type": "number",
            "description": "User's height (cm)",
            "minimum": 100,
            "maximum": 250,
            "example": 170
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "minimum": 18,
            "maximum": 100,
            "example": 30
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight",
            "minimum": 20,
            "maximum": 500,
            "example": 60
          },
          "bloodType": {
            "type": "number",
            "description": "User's blood type",
            "enum": [1, 2, 3, 4]
          }
        }
      },
      "DailyRateResponse": {
        "type": "object",
        "properties": {
          "dailyRate": {
            "type": "number",
            "description": "Daily rate in kcal",
            "example": 1351.5
          },
          "notAllowedProducts": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Not allowed product",
              "example": ["Яйцо куриное (желток сухой)"]
            }
          }
        }
      },
      "DailyRateWithUserIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "dailyRate": {
            "type": "number",
            "description": "Daily rate in kcal",
            "example": 1351.5
          },
          "summaries": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Updated summary",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Day's id",
                  "example": "507f1f77bcf86cd799439012"
                },
                "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
                },
                "kcalLeft": {
                  "type": "number",
                  "description": "Kcal left to consume",
                  "example": 1000
                },
                "kcalConsumed": {
                  "type": "number",
                  "description": "Kcal consumed",
                  "example": 1000
                },
                "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal",
                  "example": 2000
                },
                "percentsOfDailyRate": {
                  "type": "number",
                  "description": "Percents consumed of daily rate",
                  "example": 50
                },
                "userId": {
                  "type": "string",
                  "description": "User's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            }
          },
          "notAllowedProducts": {
            "type": "array",
            "description": "User's not allowed products (based on blood type)",
            "items": {
              "type": "string",
              "description": "Not allowed product",
              "example": ["Яйцо куриное (желток сухой)"]
            }
          }
        }
      },
      "ProductResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Product's id",
              "example": "507f1f77bcf86cd799439011"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Product's category",
                "example": "яйца"
              }
            },
            "weight": {
              "type": "number",
              "description": "Product's weight (100g)",
              "example": 100
            },
            "title": {
              "type": "object",
              "description": "Product's russian and ukrainian titles",
              "properties": {
                "ru": {
                  "type": "string",
                  "example": "Меланж яичный"
                },
                "ua": {
                  "type": "string",
                  "example": "Меланж яєчний"
                }
              }
            },
            "calories": {
              "type": "number",
              "description": "Product's kcal for 100g",
              "example": 157
            },
            "groupBloodNotAllowed": {
              "type": "array",
              "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
              "items": {
                "oneOf": [{ "type": "null" }, { "type": "boolean" }]
              },
              "example": [null, true, false, false, false]
            },
            "__v": {
              "type": "integer",
              "description": "MongoDB document service versionKey (ignore)"
            }
          }
        }
      },
      "PostDayRequest": {
        "type": "object",
        "required": ["date", "productId", "weight"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2020-12-31"
          },
          "productId": {
            "type": "string",
            "description": "Product's id",
            "example": "5d51694802b2373622ff552c"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": 100
          }
        }
      },
      "PostDayResponse": {
        "type": "object",
        "properties": {
          "eatenProduct": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Eaten product's description",
                "example": "Меланж яичный"
              },
              "weight": {
                "type": "number",
                "description": "Eaten product's weight",
                "example": 100
              },
              "kcal": {
                "type": "number",
                "description": "kcal consumed",
                "example": 157
              },
              "id": {
                "type": "string",
                "description": "Eaten product's id",
                "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
              }
            }
          },
          "day": {
            "type": "object",
            "description": "Day (or newDay) when the product was eaten",
            "properties": {
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "eatenProducts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Eaten product's description",
                      "example": "Меланж яичный"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Eaten product's weight",
                      "example": 100
                    },
                    "kcal": {
                      "type": "number",
                      "description": "kcal consumed",
                      "example": 157
                    },
                    "id": {
                      "type": "string",
                      "description": "Eaten product's id",
                      "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                    }
                  }
                }
              },
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2020-12-31"
              },
              "daySummary": {
                "type": "ObjectId",
                "description": "Id of the day's summary",
                "example": "507f1f77bcf86cd799439011"
              }
            }
          },
          "daySummary": {
            "type": "object",
            "description": "Updated summary (or newSummary)",
            "properties": {
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2020-12-31"
              },
              "kcalLeft": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 1194.5
              },
              "kcalConsumed": {
                "type": "number",
                "description": "Kcal consumed",
                "example": 157
              },
              "dailyRate": {
                "type": "number",
                "description": "Daily rate in kcal",
                "example": 1351.5
              },
              "percentsOfDailyRate": {
                "type": "number",
                "description": "Percents consumed of daily rate",
                "example": 11.616722160562338
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439012"
              },
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "507f1f77bcf86cd799439011"
              }
            }
          }
        }
      },
      "DeleteDayRequest": {
        "type": "object",
        "required": ["dayId", "eatenProductId"],
        "properties": {
          "dayId": {
            "type": "string",
            "description": "Day's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "eatenProductId": {
            "type": "string",
            "description": "Eaten product's id",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
          }
        }
      },
      "DeleteDayResponse": {
        "type": "object",
        "description": "Updated summary",
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2020-12-31"
          },
          "kcalLeft": {
            "type": "number",
            "description": "Kcal left to consume",
            "example": 1000
          },
          "kcalConsumed": {
            "type": "number",
            "description": "Kcal consumed",
            "example": 1000
          },
          "dailyRate": {
            "type": "number",
            "description": "Daily rate in kcal",
            "example": 2000
          },
          "percentsOfDailyRate": {
            "type": "number",
            "description": "Percents consumed of daily rate",
            "example": 50
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "id": {
            "type": "string",
            "description": "Day's id",
            "example": "507f1f77bcf86cd799439012"
          }
        }
      },
      "GetDayRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2020-12-31"
          }
        }
      },
      "GetDayResponse": {
        "type": "object",
        "description": "Day (or newDay) when the product was eaten",
        "properties": {
          "id": {
            "type": "string",
            "description": "Day's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "eatenProducts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Eaten product's description",
                  "example": "Меланж яичный"
                },
                "weight": {
                  "type": "number",
                  "description": "Eaten product's weight",
                  "example": 100
                },
                "kcal": {
                  "type": "number",
                  "description": "kcal consumed",
                  "example": 157
                },
                "id": {
                  "type": "string",
                  "description": "Eaten product's id",
                  "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                }
              }
            }
          },
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2020-12-31"
          },
          "daySummary": {
            "type": "object",
            "description": "Day's summary",
            "properties": {
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2020-12-31"
              },
              "kcalLeft": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 1194.5
              },
              "kcalConsumed": {
                "type": "number",
                "description": "Kcal consumed",
                "example": 157
              },
              "dailyRate": {
                "type": "number",
                "description": "Daily rate in kcal",
                "example": 1351.5
              },
              "percentsOfDailyRate": {
                "type": "number",
                "description": "Percents consumed of daily rate",
                "example": 11.616722160562338
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439012"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
